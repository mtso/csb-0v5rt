{"version":3,"sources":["utils.js","Keyboard.js","Modal.js","Game.js","App.js","index.js"],"names":["parseCharset","wordbank","keys","word","split","ch","Object","map","k","key","state","getLongest","words","length","len","getSolutionIndex","a","b","c","d","seed","str","i","h","Math","imul","charCodeAt","xmur3","r","t","floor","stateToColor","copyToClipboard","text","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","console","warn","prompt","removeChild","Row","props","className","keymap","entry","isKeyEnabled","enabledKeys","includes","color","onClick","e","onKeypress","Keyboard","segments","list","n","ceil","push","slice","min","segment","s","onEnter","NOOP","onDelete","Modal","show","defaultPrevented","onClose","preventDefault","children","Game","guesses","guess","limit","resultShow","bankShow","infoShow","isWin","wordbankMap","reduce","acc","w","wordTrie","trie","digger","char","makeTrie","bind","onToggleResult","onToggleBank","onToggleInfo","copyResultToClipboard","copyShareLinkToClipboard","this","setState","concat","join","alert","result","solution","input","solutionChars","solutionCounts","inputCounts","inputChars","Array","visited","fill","match","compare","every","forEach","max","objDiv","getElementById","scrollTop","scrollHeight","scrollToBottom","log","header","location","protocol","host","pathname","nextKeys","node","getAvailableKeys","isValidKaomojiB","isValidKaomoji","kaomoji","href","id","g","React","Component","App","predeterminedState","search","replace","random","rootElement","ReactDOM","render","resizer","vh","innerHeight","documentElement","setProperty","addEventListener"],"mappings":"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","file":"static/js/main.71c464c5.chunk.js","sourcesContent":["export function parseCharset(wordbank) {\n  const keys = {};\n  for (const word of wordbank) {\n    for (const ch of word.split(\"\")) {\n      keys[ch] = ch;\n    }\n  }\n  return Object.keys(keys).map((k) => ({ key: k, state: -1 }));\n}\n\nexport function getLongest(words) {\n  if (words.length < 1) {\n    return 0;\n  }\n  let len = words[0].length;\n  for (const word of words) {\n    if (word.length > len) {\n      len = word.length;\n    }\n  }\n  return len;\n}\n\nexport function segment(list, n) {\n  let len = Math.ceil(list.length / n);\n  let segments = [];\n  for (let i = 0; i < n; i++) {\n    segments.push(list.slice(i * len, Math.min(i * len + len, list.length)));\n  }\n  return segments;\n}\n\nexport const compare = (solution, input) => {\n  const solutionChars = solution.split(\"\");\n\n  const solutionCounts = solutionChars.reduce((acc, ch) => {\n    acc[ch] = acc[ch] || 0;\n    acc[ch] += 1;\n    return acc;\n  }, {});\n\n  const inputCounts = {};\n\n  const inputChars = input.split(\"\");\n\n  const result = new Array(inputChars.length);\n\n  const visited = new Array(inputChars.length).fill(false);\n\n  for (let i = 0; i < inputChars.length; i++) {\n    const ch = inputChars[i];\n\n    if (ch === solutionChars[i]) {\n      result[i] = {\n        char: ch,\n        match: 2\n      };\n      inputCounts[ch] = inputCounts[ch] || 0;\n      inputCounts[ch] += 1;\n      visited[i] = true;\n    }\n  }\n\n  for (let i = 0; i < inputChars.length; i++) {\n    const ch = inputChars[i];\n\n    if (visited[i]) {\n      continue;\n    } else if ((inputCounts[ch] || 0) < (solutionCounts[ch] || 0)) {\n      result[i] = {\n        char: ch,\n        match: 1\n      };\n      inputCounts[ch] = inputCounts[ch] || 0;\n      inputCounts[ch] += 1;\n    } else {\n      result[i] = {\n        char: ch,\n        match: 0\n      };\n      inputCounts[ch] = inputCounts[ch] || 0;\n      inputCounts[ch] += 1;\n    }\n  }\n  return result;\n};\n\nexport function xmur3(str) {\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\n    h = (h << 13) | (h >>> 19);\n  }\n  return function () {\n    h = Math.imul(h ^ (h >>> 16), 2246822507);\n    h = Math.imul(h ^ (h >>> 13), 3266489909);\n    return (h ^= h >>> 16) >>> 0;\n  };\n}\n\nexport function sfc32(a, b, c, d) {\n  return function () {\n    a >>>= 0;\n    b >>>= 0;\n    c >>>= 0;\n    d >>>= 0;\n    var t = (a + b) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    d = (d + 1) | 0;\n    t = (t + d) | 0;\n    c = (c + t) | 0;\n    return (t >>> 0) / 4294967296;\n  };\n}\n\nexport function getSolutionIndex(length, state) {\n  const seed = xmur3(state);\n  const rand = sfc32(seed(), seed(), seed(), seed());\n  const r = rand();\n  return Math.floor(r * length);\n}\n\nexport function generateState(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function stateToColor(state) {\n  switch (state) {\n    case 2:\n      return \"bg-green-500\";\n    case 1:\n      return \"bg-yellow-500\";\n    case 0:\n      return \"bg-slate-400\";\n    default:\n      return \"bg-slate-200\";\n  }\n}\n\nexport function uniq(list) {\n  const visited = {};\n  const newlist = [];\n  for (const el of list) {\n    if (visited[el]) {\n      continue;\n    }\n\n    visited[el] = true;\n    newlist.push(el);\n  }\n  return newlist;\n}\n\n// Copies a string to the clipboard. Must be called from within an\n// event handler such as click. May return false if it failed, but\n// this is not always possible. Browser support for Chrome 43+,\n// Firefox 42+, Safari 10+, Edge and Internet Explorer 10+.\n// Internet Explorer: The clipboard feature may be disabled by\n// an administrator. By default a prompt is shown the first\n// time the clipboard is used (per session).\nexport function copyToClipboard(text) {\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    return window.clipboardData.setData(\"Text\", text);\n  } else if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported(\"copy\")\n  ) {\n    var textarea = document.createElement(\"textarea\");\n    textarea.textContent = text;\n    textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      console.warn(\"Copy to clipboard failed.\", ex);\n      return prompt(\"Copy to clipboard: Ctrl+C, Enter\", text);\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n}\n\n/*\n{\n  \"(\": {\n    \"#\": {\n      \"`\": {\n        \"Д\": {\n          \"´\": {\n            \")\": {\n            }\n          }\n        }\n      }\n    }\n  }\n}\n*/\nconst LEAF = \"$END$\";\n\nexport function makeTrie(wordbank) {\n  const trie = {};\n  for (const word of wordbank) {\n    let digger = trie;\n    for (const char of word.split(\"\")) {\n      digger[char] = digger[char] || {};\n      digger = digger[char];\n    }\n    digger[LEAF] = true;\n  }\n  return trie;\n}\n\nexport function getAvailableKeys(trie, guess) {\n  let node = trie;\n  for (const char of guess) {\n    node = node[char] || {};\n  }\n  return Object.keys(node);\n}\n\nexport function isValidKaomoji(trie, guess) {\n  let node = trie;\n  for (const char of guess) {\n    node = node[char] || {};\n  }\n  return node[LEAF] || false;\n}\n","import React from \"react\";\nimport { NOOP } from \"./Game\";\nimport { segment, stateToColor } from \"./utils\";\n\nfunction Row(props) {\n  return (\n    <div className=\"flex\">\n      {props.keymap.map((entry, i) => {\n        const { key, state } = entry;\n        const isKeyEnabled = (props.enabledKeys || []).includes(key);\n        const color = !isKeyEnabled\n          ? stateToColor(state) + \"/30 border-slate-100/30 cursor-not-allowed\"\n          : stateToColor(state) + \" border-slate-400 cursor-pointer\";\n        return (\n          <div\n            onClick={isKeyEnabled ? (e) => props.onKeypress(key) : () => {}}\n            className={\"w-8 h-9 my-2 mx-1 px-2 py-0 rounded border-2 \" + color}\n            key={key}\n          >\n            <div className=\"opacity-100\">{key}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default function Keyboard(props) {\n  const segments = segment(props.keymap, 4);\n  return (\n    <div className=\"w-full border-0 border-t-2 border-slate-200 text-xl\">\n      <div className=\"py-3 mx-2 flex flex-col overflow-x-scroll\">\n        {segments.map((s, i) => (\n          <Row\n            key={i}\n            keymap={s}\n            onKeypress={props.onKeypress}\n            enabledKeys={props.enabledKeys}\n          />\n        ))}\n      </div>\n      <div className=\"flex mb-3 ml-2 mt-0 mr-2\">\n        <div\n          className={\n            props.onEnter === NOOP\n              ? \"cursor-not-allowed rounded px-4 text-center w-1/2 h-11 m-1 mr-2 py-2 text-base font-semibold uppercase inline-block bg-slate-100 border-2 border-slate-100\"\n              : \"cursor-pointer rounded px-4 text-center w-1/2 h-11 m-1 mr-2 py-2 text-base font-semibold uppercase inline-block bg-slate-200 border-2 border-slate-400\"\n          }\n          onClick={props.onEnter}\n        >\n          Enter\n        </div>\n        <div\n          className={\n            props.onDelete === NOOP\n              ? \"cursor-not-allowed rounded px-4 text-center w-1/2 h-11 m-1 mr-2 py-2 text-base font-semibold uppercase inline-block bg-slate-100 border-2 border-slate-100\"\n              : \"cursor-pointer rounded px-4 text-center w-1/2 h-11 m-1 mr-2 py-2 text-base font-semibold uppercase inline-block bg-slate-200 border-2 border-slate-400\"\n          }\n          onClick={props.onDelete}\n        >\n          Delete\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Modal(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"z-10 fixed bg-opacity-50 bg-black w-full mb-10\"\n      onClick={(e) => {\n        if (!e.defaultPrevented) {\n          (props.onClose || (() => {}))(e);\n        }\n      }}\n    >\n      <div\n        className=\"absolute font-semibold top-8 right-8 cursor-pointer z-50 underline\"\n        onClick={props.onClose || (() => {})}\n      >\n        Close\n      </div>\n      <div className=\"cursor-pointer z-20 h-screen relative w-full p-5 pb-10 overflow-y-scroll\">\n        <div\n          className=\"cursor-auto p-3 mb-20 bg-white\"\n          onClick={(e) => {\n            if (!e.defaultPrevented) {\n              return e.preventDefault();\n            }\n          }}\n        >\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport Modal from \"./Modal\";\nimport {\n  compare,\n  copyToClipboard,\n  getAvailableKeys,\n  getLongest,\n  isValidKaomoji,\n  makeTrie,\n  parseCharset,\n  stateToColor\n} from \"./utils\";\n\nexport const NOOP = () => {};\n\nfunction scrollToBottom() {\n  var objDiv = document.getElementById(\"display\");\n  objDiv.scrollTop = objDiv.scrollHeight;\n}\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      guesses: [],\n      guess: [],\n      limit: getLongest(props.wordbank),\n      keymap: parseCharset(this.props.wordbank),\n      resultShow: false,\n      bankShow: false,\n      infoShow: false,\n      isWin: false\n    };\n    this.wordbankMap = this.props.wordbank.reduce((acc, w) => {\n      acc[w] = w;\n      return acc;\n    }, {});\n    this.wordTrie = makeTrie(this.props.wordbank);\n    this.onKeypress = this.onKeypress.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEnter = this.onEnter.bind(this);\n    this.onToggleResult = this.onToggleResult.bind(this);\n    this.onToggleBank = this.onToggleBank.bind(this);\n    this.onToggleInfo = this.onToggleInfo.bind(this);\n    this.copyResultToClipboard = this.copyResultToClipboard.bind(this);\n    this.copyShareLinkToClipboard = this.copyShareLinkToClipboard.bind(this);\n  }\n\n  onKeypress(key) {\n    if (this.state.guess.length >= this.state.limit) {\n      return;\n    }\n    this.setState({\n      guess: this.state.guess.concat([key])\n    });\n  }\n\n  onDelete() {\n    this.setState({\n      guess: this.state.guess.slice(0, this.state.guess.length - 1)\n    });\n  }\n\n  onEnter() {\n    const guess = this.state.guess;\n    if (guess.length < 1) {\n      return;\n    }\n    if (!this.wordbankMap[guess.join(\"\")]) {\n      return alert(\"Not a valid Kaomoji!\");\n    }\n    const result = compare(this.props.solution, guess.join(\"\"));\n    const isWin =\n      result.every((r) => r.match === 2) &&\n      result.length === this.props.solution.length;\n    this.setState(\n      {\n        guesses: this.state.guesses.concat([result]),\n        guess: [],\n        isWin,\n        keymap: this.state.keymap.map((k) => {\n          let state = k.state;\n          result.forEach((r) => {\n            if (r.char === k.key) {\n              state = Math.max(k.state, r.match);\n            }\n          });\n          if (state !== k.state) {\n            return { key: k.key, state };\n          } else {\n            return k;\n          }\n        }),\n        resultShow: isWin ? true : false\n      },\n      () => scrollToBottom()\n    );\n    console.log(result);\n  }\n\n  onToggleResult(show) {\n    this.setState({\n      resultShow: show || false\n    });\n  }\n\n  onToggleBank(show) {\n    this.setState({\n      bankShow: show || false\n    });\n  }\n\n  onToggleInfo(show) {\n    this.setState({\n      infoShow: show || false\n    });\n  }\n\n  copyResultToClipboard() {\n    const header =\n      \"Kaomojidle \" +\n      this.props.seed +\n      \" \" +\n      this.state.guesses.length +\n      \"/∞\\n\\n\";\n    const guesses = this.state.guesses\n      .map((result) => {\n        return result\n          .map((r) => {\n            switch (r.match) {\n              case 2:\n                return \"🟩\";\n              case 1:\n                return \"🟨\";\n              default:\n                return \"⬜️\";\n            }\n          })\n          .join(\"\");\n      })\n      .join(\"\\n\");\n    console.log(header + guesses);\n    copyToClipboard(header + guesses);\n    alert(\"Copied result to clipboard!\");\n  }\n\n  copyShareLinkToClipboard() {\n    const base =\n      document.location.protocol +\n      \"//\" +\n      document.location.host +\n      document.location.pathname;\n    const shareLink = base + \"?\" + this.props.seed;\n    copyToClipboard(shareLink);\n    alert(\"Copied puzzle link to clipboard!\");\n  }\n\n  render() {\n    const nextKeys = getAvailableKeys(this.wordTrie, this.state.guess);\n    const isValidKaomojiB = isValidKaomoji(this.wordTrie, this.state.guess);\n    return (\n      <div className=\"flex flex-col h-full justify-between\">\n        <Modal\n          show={this.state.infoShow}\n          onClose={() => this.onToggleInfo(false)}\n        >\n          <h1 className=\"font-bold mb-4\">Info</h1>\n          <div>\n            <p className=\"mb-3\">\n              You get an unlimited number of guesses to guess the kaomoji.\n            </p>\n            <p className=\"mb-3\">\n              Each guess must be a valid Kaomoji (see the Kaomoji list for\n              reference).\n            </p>\n            <p className=\"mb-3\">Click the \"Enter\" button to submit.</p>\n            <p className=\"mb-4\">\n              After each guess, the color of the tiles will change to show how\n              close your guess was to the word.\n            </p>\n            <h2 className=\"font-semibold mb-3\">Examples</h2>\n            <div>\n              <span className=\"bg-green-500\">(</span>\n              <span className=\"bg-slate-200\">＃</span>\n              <span className=\"bg-slate-200\">`</span>\n              <span className=\"bg-slate-200\">Д</span>\n              <span className=\"bg-slate-200\">´</span>\n              <span className=\"bg-slate-200\">)</span>\n              <div className=\"mb-3\">\n                The character \"(\" is in the right spot.\n              </div>\n              <span className=\"bg-slate-200\">(</span>\n              <span className=\"bg-yellow-500\">＃</span>\n              <span className=\"bg-slate-200\">`</span>\n              <span className=\"bg-slate-200\">Д</span>\n              <span className=\"bg-slate-200\">´</span>\n              <span className=\"bg-slate-200\">)</span>\n              <div className=\"mb-3\">\n                The character \"#\" is in the kaomoji but in the wrong spot.\n              </div>\n\n              <span className=\"bg-slate-200\">(</span>\n              <span className=\"bg-slate-200\">＃</span>\n              <span className=\"bg-slate-400\">`</span>\n              <span className=\"bg-slate-200\">Д</span>\n              <span className=\"bg-slate-200\">´</span>\n              <span className=\"bg-slate-200\">)</span>\n              <div className=\"mb-3\">\n                The character \"`\" is not in the kaomoji.\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <Modal\n          show={this.state.resultShow}\n          onClose={() => this.onToggleResult(false)}\n        >\n          <div className=\"font-bold text-lg mb-2\">\n            You Won in {this.state.guesses.length} Guess\n            {this.state.guesses.length === 1 ? \"\" : \"es\"}!\n          </div>\n          <div\n            className=\"p-2 underline border-round cursor-pointer bg-slate-200\"\n            onClick={this.copyResultToClipboard}\n          >\n            Copy Result to Clipboard\n          </div>\n        </Modal>\n        <Modal\n          show={this.state.bankShow}\n          onClose={() => this.onToggleBank(false)}\n        >\n          <div className=\"flex flex-col\">\n            <h1 className=\"font-bold mb-6\">Kaomoji List</h1>\n            <div className=\"relative mb-4\">\n              {this.props.wordbank.map((kaomoji, i) => {\n                return <div key={kaomoji}>{kaomoji}</div>;\n              })}\n            </div>\n          </div>\n        </Modal>\n        <div className=\"bg-slate-200 w-full flex h-9 grow-0 shrink-0 overflow-x-scroll\">\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={() => this.onToggleInfo(true)}\n          >\n            Info\n          </div>\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={() => this.onToggleBank(true)}\n          >\n            Kaomoji List\n          </div>\n\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={this.copyShareLinkToClipboard}\n          >\n            Share ({this.props.seed})\n          </div>\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={() =>\n              (document.location.href =\n                document.location.protocol +\n                \"//\" +\n                document.location.host +\n                document.location.pathname)\n            }\n          >\n            New Puzzle\n          </div>\n          {this.state.isWin && (\n            <div\n              className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n              onClick={() => this.onToggleResult(true)}\n            >\n              Show Result\n            </div>\n          )}\n        </div>\n        <div className=\"overflow-y-scroll mb-auto p-4\" id=\"display\">\n          <div className=\"w-full text-center text-xl\">\n            {this.state.guesses.map((result, i) => {\n              return (\n                <div className=\"\" key={i}>\n                  {result.map(({ char, match }, i) => {\n                    let color = stateToColor(match);\n                    return (\n                      <span key={i} className={color}>\n                        {char}\n                      </span>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <div className=\" w-full h-6 mb-auto text-center text-xl\">\n            {this.state.guess.map((g, i) => (\n              <span key={i}>{g}</span>\n            ))}\n\n            {!this.state.isWin && (\n              <span className=\"relative\">\n                <span className=\"absolute border-b-4 border-purple-400 w-3 h-7\">\n                  　\n                </span>\n              </span>\n            )}\n          </div>\n        </div>\n        <Keyboard\n          onKeypress={this.state.isWin ? NOOP : this.onKeypress}\n          onDelete={\n            this.state.isWin || this.state.guess.length < 1\n              ? NOOP\n              : this.onDelete\n          }\n          onEnter={this.state.isWin || !isValidKaomojiB ? NOOP : this.onEnter}\n          keymap={this.state.keymap}\n          enabledKeys={nextKeys}\n        />\n      </div>\n    );\n  }\n}\n","import \"./styles.css\";\n\nimport wordbank from \"./wordbank.json\";\n\nimport Game from \"./Game\";\nimport { getSolutionIndex } from \"./utils\";\n\nexport default function App() {\n  const predeterminedState = document.location.search.replace(/^\\?/, \"\");\n  const state = !!predeterminedState\n    ? predeterminedState\n    : \"\" + Math.ceil(Math.random() * 10000);\n  const solution = wordbank[getSolutionIndex(wordbank.length, state)];\n  return (\n    <div className=\"h-full w-screen\">\n      <Game wordbank={wordbank} solution={solution} seed={state} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\nconst resizer = () => {\n  // We execute the same script as before\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n};\n\n// We listen to the resize event\nwindow.addEventListener(\"resize\", resizer);\nresizer();\n"],"sourceRoot":""}