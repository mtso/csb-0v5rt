{"version":3,"sources":["utils.js","Keyboard.js","Modal.js","Game.js","App.js","index.js"],"names":["parseCharset","wordbank","keys","word","split","ch","Object","map","k","key","state","getLongest","words","length","len","getSolutionIndex","a","b","c","d","seed","str","i","h","Math","imul","charCodeAt","xmur3","r","t","floor","stateToColor","copyToClipboard","text","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","console","warn","prompt","removeChild","Row","props","className","keymap","entry","color","onClick","e","onKeypress","Keyboard","segments","list","n","ceil","push","slice","min","segment","s","onDelete","onEnter","Modal","show","onClose","children","NOOP","Game","guesses","guess","limit","resultShow","bankShow","infoShow","isWin","wordbankMap","reduce","acc","w","bind","onToggleResult","onToggleBank","onToggleInfo","copyResultToClipboard","copyShareLinkToClipboard","this","setState","concat","join","alert","result","solution","input","solutionChars","solutionCounts","inputCounts","inputChars","Array","visited","fill","char","match","compare","every","forEach","max","objDiv","getElementById","scrollTop","scrollHeight","scrollToBottom","log","header","location","protocol","host","pathname","kaomoji","href","id","g","React","Component","App","predeterminedState","search","replace","random","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.82a14527.chunk.js","sourcesContent":["export function parseCharset(wordbank) {\n  const keys = {};\n  for (const word of wordbank) {\n    for (const ch of word.split(\"\")) {\n      keys[ch] = ch;\n    }\n  }\n  return Object.keys(keys).map((k) => ({ key: k, state: 0 }));\n}\n\nexport function getLongest(words) {\n  if (words.length < 1) {\n    return 0;\n  }\n  let len = words[0].length;\n  for (const word of words) {\n    if (word.length > len) {\n      len = word.length;\n    }\n  }\n  return len;\n}\n\nexport function segment(list, n) {\n  let len = Math.ceil(list.length / n);\n  let segments = [];\n  for (let i = 0; i < n; i++) {\n    segments.push(list.slice(i * len, Math.min(i * len + len, list.length)));\n  }\n  return segments;\n}\n\nexport const compare = (solution, input) => {\n  const solutionChars = solution.split(\"\");\n\n  const solutionCounts = solutionChars.reduce((acc, ch) => {\n    acc[ch] = acc[ch] || 0;\n    acc[ch] += 1;\n    return acc;\n  }, {});\n\n  const inputCounts = {};\n\n  const inputChars = input.split(\"\");\n\n  const result = new Array(inputChars.length);\n\n  const visited = new Array(inputChars.length).fill(false);\n\n  for (let i = 0; i < inputChars.length; i++) {\n    const ch = inputChars[i];\n\n    if (ch === solutionChars[i]) {\n      result[i] = {\n        char: ch,\n        match: 2\n      };\n      inputCounts[ch] = inputCounts[ch] || 0;\n      inputCounts[ch] += 1;\n      visited[i] = true;\n    }\n  }\n\n  for (let i = 0; i < inputChars.length; i++) {\n    const ch = inputChars[i];\n\n    if (visited[i]) {\n      continue;\n    } else if ((inputCounts[ch] || 0) < (solutionCounts[ch] || 0)) {\n      result[i] = {\n        char: ch,\n        match: 1\n      };\n      inputCounts[ch] = inputCounts[ch] || 0;\n      inputCounts[ch] += 1;\n    } else {\n      result[i] = {\n        char: ch,\n        match: 0\n      };\n      inputCounts[ch] = inputCounts[ch] || 0;\n      inputCounts[ch] += 1;\n    }\n  }\n  return result;\n};\n\nexport function xmur3(str) {\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\n    h = (h << 13) | (h >>> 19);\n  }\n  return function () {\n    h = Math.imul(h ^ (h >>> 16), 2246822507);\n    h = Math.imul(h ^ (h >>> 13), 3266489909);\n    return (h ^= h >>> 16) >>> 0;\n  };\n}\n\nexport function sfc32(a, b, c, d) {\n  return function () {\n    a >>>= 0;\n    b >>>= 0;\n    c >>>= 0;\n    d >>>= 0;\n    var t = (a + b) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    d = (d + 1) | 0;\n    t = (t + d) | 0;\n    c = (c + t) | 0;\n    return (t >>> 0) / 4294967296;\n  };\n}\n\nexport function getSolutionIndex(length, state) {\n  const seed = xmur3(state);\n  const rand = sfc32(seed(), seed(), seed(), seed());\n  const r = rand();\n  return Math.floor(r * length);\n}\n\nexport function generateState(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function stateToColor(state) {\n  switch (state) {\n    case 2:\n      return \"bg-green-500\";\n    case 1:\n      return \"bg-yellow-500\";\n    default:\n      return \"bg-slate-200\";\n  }\n}\n\nexport function uniq(list) {\n  const visited = {};\n  const newlist = [];\n  for (const el of list) {\n    if (visited[el]) {\n      continue;\n    }\n\n    visited[el] = true;\n    newlist.push(el);\n  }\n  return newlist;\n}\n\n// Copies a string to the clipboard. Must be called from within an\n// event handler such as click. May return false if it failed, but\n// this is not always possible. Browser support for Chrome 43+,\n// Firefox 42+, Safari 10+, Edge and Internet Explorer 10+.\n// Internet Explorer: The clipboard feature may be disabled by\n// an administrator. By default a prompt is shown the first\n// time the clipboard is used (per session).\nexport function copyToClipboard(text) {\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    return window.clipboardData.setData(\"Text\", text);\n  } else if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported(\"copy\")\n  ) {\n    var textarea = document.createElement(\"textarea\");\n    textarea.textContent = text;\n    textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      console.warn(\"Copy to clipboard failed.\", ex);\n      return prompt(\"Copy to clipboard: Ctrl+C, Enter\", text);\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n}\n","import React from \"react\";\nimport { segment, stateToColor } from \"./utils\";\n\nfunction Row(props) {\n  return (\n    <div className=\"flex\">\n      {props.keymap.map((entry, i) => {\n        const { key, state } = entry;\n        const color = stateToColor(state);\n        return (\n          <div\n            onClick={(e) => props.onKeypress(key)}\n            className={\"cursor-pointer w-4 h-6 m-1 px-1 py-1/2 \" + color}\n            key={key}\n          >\n            {key}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default function Keyboard(props) {\n  const segments = segment(props.keymap, 5);\n  return (\n    <div className=\"w-full border-2 border-slate-200\">\n      <div className=\"py-4 mx-2 flex flex-col overflow-x-scroll\">\n        {segments.map((s, i) => (\n          <Row key={i} keymap={s} onKeypress={props.onKeypress} />\n        ))}\n        <div className=\"flex mt-2\">\n          <div\n            className=\"cursor-pointer px-1 h-6 m-1 py-1/2 bg-slate-200\"\n            onClick={props.onDelete}\n          >\n            Delete\n          </div>\n          <div\n            className=\"cursor-pointer px-1 h-6 m-1 py-1/2 bg-slate-200\"\n            onClick={props.onEnter}\n          >\n            Enter\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Modal(props) {\n  if (!props.show) {\n    return null;\n  }\n  return (\n    <div className=\"z-10 fixed bg-opacity-70 bg-white h-screen w-full\">\n      <div className=\"m-4 p-2 bg-white\">\n        <div\n          className=\"absolute right-6 cursor-pointer z-50 underline\"\n          onClick={props.onClose || (() => {})}\n        >\n          Close\n        </div>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport Modal from \"./Modal\";\nimport {\n  compare,\n  copyToClipboard,\n  getLongest,\n  parseCharset,\n  stateToColor\n} from \"./utils\";\n\nconst NOOP = () => {};\n\nfunction scrollToBottom() {\n  var objDiv = document.getElementById(\"display\");\n  objDiv.scrollTop = objDiv.scrollHeight;\n}\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      guesses: [],\n      guess: [],\n      limit: getLongest(props.wordbank),\n      keymap: parseCharset(this.props.wordbank),\n      resultShow: false,\n      bankShow: false,\n      infoShow: false,\n      isWin: false\n    };\n    this.wordbankMap = this.props.wordbank.reduce((acc, w) => {\n      acc[w] = w;\n      return acc;\n    }, {});\n    this.onKeypress = this.onKeypress.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEnter = this.onEnter.bind(this);\n    this.onToggleResult = this.onToggleResult.bind(this);\n    this.onToggleBank = this.onToggleBank.bind(this);\n    this.onToggleInfo = this.onToggleInfo.bind(this);\n    this.copyResultToClipboard = this.copyResultToClipboard.bind(this);\n    this.copyShareLinkToClipboard = this.copyShareLinkToClipboard.bind(this);\n  }\n\n  onKeypress(key) {\n    if (this.state.guess.length >= this.state.limit) {\n      return;\n    }\n    this.setState({\n      guess: this.state.guess.concat([key])\n    });\n  }\n\n  onDelete() {\n    this.setState({\n      guess: this.state.guess.slice(0, this.state.guess.length - 1)\n    });\n  }\n\n  onEnter() {\n    const guess = this.state.guess;\n    if (guess.length < 1) {\n      return;\n    }\n    if (!this.wordbankMap[guess.join(\"\")]) {\n      return alert(\"Not a valid Kaomoji!\");\n    }\n    const result = compare(this.props.solution, guess.join(\"\"));\n    const isWin =\n      result.every((r) => r.match === 2) &&\n      result.length === this.props.solution.length;\n    this.setState(\n      {\n        guesses: this.state.guesses.concat([result]),\n        guess: [],\n        isWin,\n        keymap: this.state.keymap.map((k) => {\n          let state = k.state;\n          result.forEach((r) => {\n            if (r.char === k.key) {\n              state = Math.max(k.state, r.match);\n            }\n          });\n          if (state !== k.state) {\n            return { key: k.key, state };\n          } else {\n            return k;\n          }\n        }),\n        resultShow: isWin ? true : false\n      },\n      () => scrollToBottom()\n    );\n    console.log(result);\n  }\n\n  onToggleResult(show) {\n    this.setState({\n      resultShow: show || false\n    });\n  }\n\n  onToggleBank(show) {\n    this.setState({\n      bankShow: show || false\n    });\n  }\n\n  onToggleInfo(show) {\n    this.setState({\n      infoShow: show || false\n    });\n  }\n\n  copyResultToClipboard() {\n    const header =\n      \"Kaomojidle \" +\n      this.props.seed +\n      \" \" +\n      this.state.guesses.length +\n      \"/∞\\n\\n\";\n    const guesses = this.state.guesses\n      .map((result) => {\n        return result\n          .map((r) => {\n            switch (r.match) {\n              case 2:\n                return \"🟩\";\n              case 1:\n                return \"🟨\";\n              default:\n                return \"⬜️\";\n            }\n          })\n          .join(\"\");\n      })\n      .join(\"\\n\");\n    console.log(header + guesses);\n    copyToClipboard(header + guesses);\n    alert(\"Copied result to clipboard!\");\n  }\n\n  copyShareLinkToClipboard() {\n    const base =\n      document.location.protocol +\n      \"//\" +\n      document.location.host +\n      document.location.pathname;\n    const shareLink = base + \"?\" + this.props.seed;\n    copyToClipboard(shareLink);\n    alert(\"Copied puzzle link to clipboard!\");\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col h-screen justify-between\">\n        <Modal\n          show={this.state.infoShow}\n          onClose={() => this.onToggleInfo(false)}\n        >\n          <h1 className=\"font-bold mb-4\">Info</h1>\n          <div>\n            <p className=\"mb-3\">\n              You get an unlimited number of guesses to guess the kaomoji.\n            </p>\n            <p className=\"mb-3\">\n              Each guess must be a valid Kaomoji (see the Kaomoji list for\n              reference).\n            </p>\n            <p className=\"mb-3\">Click the \"Enter\" button to submit.</p>\n            <p className=\"mb-4\">\n              After each guess, the color of the tiles will change to show how\n              close your guess was to the word.\n            </p>\n            <h2 className=\"font-semibold mb-3\">Examples</h2>\n            <div>\n              {/* \n    case 2:\n      return \"bg-green-500\";\n    case 1:\n      return \"bg-yellow-500\";\n    default:\n      return \"bg-slate-200\"; */}\n              <span className=\"bg-green-500\">(</span>\n              <span className=\"bg-slate-200\">＃</span>\n              <span className=\"bg-slate-200\">`</span>\n              <span className=\"bg-slate-200\">Д</span>\n              <span className=\"bg-slate-200\">´</span>\n              <span className=\"bg-slate-200\">)</span>\n              <div className=\"mb-3\">\n                The character \"(\" is in the right spot.\n              </div>\n              <span className=\"bg-slate-200\">(</span>\n              <span className=\"bg-yellow-500\">＃</span>\n              <span className=\"bg-slate-200\">`</span>\n              <span className=\"bg-slate-200\">Д</span>\n              <span className=\"bg-slate-200\">´</span>\n              <span className=\"bg-slate-200\">)</span>\n              <div className=\"mb-3\">\n                The character \"#\" is in the kaomoji but in the wrong spot.\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <Modal\n          show={this.state.resultShow}\n          onClose={() => this.onToggleResult(false)}\n        >\n          <div className=\"font-bold text-lg mb-2\">\n            You Won in {this.state.guesses.length} Guess\n            {this.state.guesses.length === 1 ? \"\" : \"es\"}!\n          </div>\n          <div\n            className=\"p-2 underline border-round cursor-pointer bg-slate-200\"\n            onClick={this.copyResultToClipboard}\n          >\n            Copy Result to Clipboard\n          </div>\n        </Modal>\n        <Modal\n          show={this.state.bankShow}\n          onClose={() => this.onToggleBank(false)}\n        >\n          <div className=\"flex flex-col h-screen pb-10 overflow-y-scroll\">\n            <h1 className=\"font-bold mb-6\">Kaomoji List</h1>\n            <div className=\"relative mb-6\">\n              {this.props.wordbank.map((kaomoji, i) => {\n                return <div key={kaomoji}>{kaomoji}</div>;\n              })}\n            </div>\n            <div className=\"italic text-slate-400\">END</div>\n          </div>\n        </Modal>\n        <div className=\"bg-slate-200 w-full flex h-8 grow-0 overflow-x-scroll\">\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={() => this.onToggleInfo(true)}\n          >\n            Info\n          </div>\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={() => this.onToggleBank(true)}\n          >\n            Kaomoji List\n          </div>\n\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={this.copyShareLinkToClipboard}\n          >\n            Share ({this.props.seed})\n          </div>\n          <div\n            className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n            onClick={() =>\n              (document.location.href =\n                document.location.protocol +\n                \"//\" +\n                document.location.host +\n                document.location.pathname)\n            }\n          >\n            New Puzzle\n          </div>\n          {this.state.isWin && (\n            <div\n              className=\"m-2 inline-block whitespace-nowrap cursor-pointer font-semibold text-sm underline\"\n              onClick={() => this.onToggleResult(true)}\n            >\n              Show Result\n            </div>\n          )}\n        </div>\n        <div className=\"overflow-y-scroll mb-auto p-4\" id=\"display\">\n          <div className=\"w-full text-center\">\n            {this.state.guesses.map((result, i) => {\n              return (\n                <div className=\"\" key={i}>\n                  {result.map(({ char, match }, i) => {\n                    let color = stateToColor(match);\n                    return (\n                      <span key={i} className={color}>\n                        {char}\n                      </span>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <div className=\" w-full h-6 mb-auto text-center\">\n            {this.state.guess.map((g, i) => (\n              <span key={i}>{g}</span>\n            ))}\n\n            {!this.state.isWin && (\n              <span>\n                <span className=\"absolute border-b-4 border-purple-400 w-3 h-6\">\n                  　\n                </span>\n              </span>\n            )}\n          </div>\n        </div>\n        <Keyboard\n          onKeypress={this.state.isWin ? NOOP : this.onKeypress}\n          onDelete={this.state.isWin ? NOOP : this.onDelete}\n          onEnter={this.state.isWin ? NOOP : this.onEnter}\n          keymap={this.state.keymap}\n        />\n      </div>\n    );\n  }\n}\n","import \"./styles.css\";\n\nimport wordbank from \"./wordbank.json\";\n\nimport Game from \"./Game\";\nimport { getSolutionIndex } from \"./utils\";\n\nexport default function App() {\n  const predeterminedState = document.location.search.replace(/^\\?/, \"\");\n  const state = !!predeterminedState\n    ? predeterminedState\n    : \"\" + Math.ceil(Math.random() * 10000);\n  const solution = wordbank[getSolutionIndex(wordbank.length, state)];\n  for (let i = 0; i < 1000; i++) {\n    const idx = getSolutionIndex(wordbank.length, \"\" + i);\n    if (idx === 0) {\n      console.log(i);\n      break;\n    }\n  }\n  return (\n    <div className=\"h-screen w-screen\">\n      <Game wordbank={wordbank} solution={solution} seed={state} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}